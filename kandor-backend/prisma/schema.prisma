generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  uuid         String         @id @db.VarChar(36)
  nick         String         @db.VarChar(50)
  email        String?        @unique @db.VarChar(70)
  password     String         @db.VarChar(300)
  lastLogin    DateTime       @default(dbgenerated("CURRENT_DATE")) @db.Timestamp(6)
  logged       Boolean        @default(false)
  banned       Boolean
  AccountGroup AccountGroup[]
}

model AccountGroup {
  accountUuid String  @db.VarChar(36)
  groupId     Int
  Account     Account @relation(fields: [accountUuid], references: [uuid], onDelete: NoAction, onUpdate: NoAction, map: "accountGroup_fk1")
  Group       Group   @relation(fields: [groupId], references: [groupId], onDelete: NoAction, onUpdate: NoAction, map: "accountGroup_fk2")

  @@id([accountUuid, groupId], map: "accountGroup_pk")
}

model Group {
  groupId         Int               @id @default(autoincrement())
  groupName       String?           @db.VarChar(50)
  description     String?           @db.VarChar(100)
  prefix          String?           @db.VarChar(5)
  suffix          String?           @db.VarChar(5)
  AccountGroup    AccountGroup[]
  GroupPermission GroupPermission[]
}

model GroupPermission {
  groupId      Int
  permissionId Int
  Group        Group      @relation(fields: [groupId], references: [groupId], onDelete: NoAction, onUpdate: NoAction, map: "groupPermission_fk1")
  Permission   Permission @relation(fields: [permissionId], references: [permissionId], onDelete: NoAction, onUpdate: NoAction, map: "groupPermission_fk2")

  @@id([groupId, permissionId], map: "groupPermission_pk")
}

model Permission {
  permissionId    Int               @id @default(autoincrement())
  permissionName  String?           @unique @db.VarChar(50)
  description     String?           @db.VarChar(100)
  GroupPermission GroupPermission[]
}
